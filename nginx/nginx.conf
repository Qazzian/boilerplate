#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  app.MYDOMAIN.com;

        #charset koi8-r;

        access_log  nginx/logs/app.MYDOMAIN.log;

        location / {
            root   target/app;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # the IP(s) on which your node server is running. I chose port 3000.
    upstream node_api {
        server 127.0.0.1:3030;
    }
	
    # the nginx server instance
    server {
        listen 80;
        server_name api.MYDOMAIN.com;
        access_log nginx/logs/api.MYDOMAIN.log;

        # pass the request to the node.js server with the correct headers and much more can be added, see nginx config options
        location / {
            # Add CORS support for app.MYDOMAIN.com

            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization,Origin, X-Requested-With, Content-Type, Accept, DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,If-Modified-Since,Cache-Control";
                add_header Access-Control-Allow-Credentials "false";
                add_header Content-Length 0;
                add_header Content-Type application/json;
                return 200;
            }

            # pass to Node

            proxy_pass http://node_api/;
            proxy_redirect off;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            #proxy_set_header Host $host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass_header Access-Control-Allow-Origin;
        }
    }
}
